[{"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/index.js":"1","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/reportWebVitals.js":"2","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/App.js":"3","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/UserProvider.jsx":"4","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/FormSignin.jsx":"5","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/ProtectedAdminRoute.jsx":"6","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/NavMain.jsx":"7","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/Signup.jsx":"8","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/CreateTree.jsx":"9","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/AllTrees.jsx":"10","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/EditTree.jsx":"11","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/Products.jsx":"12","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/OneTree.jsx":"13","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/api/apihandler.js":"14","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/UserContext.jsx":"15","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/withUser.jsx":"16","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/FormUser.jsx":"17","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/ProductCard.jsx":"18","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/FormTree.jsx":"19","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/ProductFilter.jsx":"20","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/RangeSlider.jsx":"21"},{"size":679,"mtime":1608996428404,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1608996428404,"results":"24","hashOfConfig":"23"},{"size":1104,"mtime":1610373921739,"results":"25","hashOfConfig":"23"},{"size":2084,"mtime":1608996428404,"results":"26","hashOfConfig":"23"},{"size":2828,"mtime":1609862124630,"results":"27","hashOfConfig":"23"},{"size":489,"mtime":1608996428404,"results":"28","hashOfConfig":"23"},{"size":2423,"mtime":1610379235800,"results":"29","hashOfConfig":"23"},{"size":202,"mtime":1608996428404,"results":"30","hashOfConfig":"23"},{"size":218,"mtime":1608996428404,"results":"31","hashOfConfig":"23"},{"size":1288,"mtime":1608996428404,"results":"32","hashOfConfig":"23"},{"size":300,"mtime":1608996428404,"results":"33","hashOfConfig":"23"},{"size":1938,"mtime":1610373921740,"results":"34","hashOfConfig":"23"},{"size":3843,"mtime":1610377901194,"results":"35","hashOfConfig":"23"},{"size":2651,"mtime":1608996428403,"results":"36","hashOfConfig":"23"},{"size":77,"mtime":1608996428404,"results":"37","hashOfConfig":"23"},{"size":420,"mtime":1608996428404,"results":"38","hashOfConfig":"23"},{"size":4971,"mtime":1610376778094,"results":"39","hashOfConfig":"23"},{"size":1051,"mtime":1610373921740,"results":"40","hashOfConfig":"23"},{"size":5065,"mtime":1608996428403,"results":"41","hashOfConfig":"23"},{"size":2454,"mtime":1610373921740,"results":"42","hashOfConfig":"23"},{"size":1805,"mtime":1610373921740,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"r4vcaf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/index.js",[],["89","90"],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/reportWebVitals.js",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/App.js",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/UserProvider.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/FormSignin.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/ProtectedAdminRoute.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/NavMain.jsx",["91","92"],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/Signup.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/CreateTree.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/AllTrees.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/EditTree.jsx",["93"],"import React from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image'\nimport FormTree from '../components/FormTree'\n\nconst EditTree = (props) => {\n    return (\n        <div>\n           <FormTree id={props.match.params.id} action={\"edit\"} /> \n        </div>\n    )\n}\n\nexport default EditTree\n","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/Products.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/pages/OneTree.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/api/apihandler.js",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/UserContext.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/withUser.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/auth/FormUser.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/ProductCard.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/FormTree.jsx",["94"],"import React, {useState, useEffect} from 'react';\nimport {Form} from 'react-bootstrap'\nimport apihandler from '../api/apihandler';\nimport {withRouter} from 'react-router-dom'\n\nconst treeArr = [\"Nordmann\", \"Epicea\", \"Nobilis\", \"Pungens\", \"Omorika\"]\n\n\nconst FormTree = (props) => {\n    const [tree, setTree] = useState({});\n    const [isLoading, setLoading] = useState(props.action === \"edit\" ? true : false)\n\n    const newTree = {...tree}\n\n    function handleChange(e) {\n        // console.log(e.target.value, e.target.name)\n        const value = e.target.type === 'file' ? e.target.files[0] : e.target.value\n        const key = e.target.name\n        newTree[`${key}`] = value\n        setTree(\n            tree => tree = newTree\n        )\n\n    }\n\n    useEffect(() => {\n      if (isLoading && props.action === \"edit\") {\n        apihandler\n          .getOneTree(`/api/tree/${props.id}`)\n          .then(data => {\n            console.log('toto')\n            setTree(tree => {\n              return tree = data\n            })\n            setLoading(isLoading => isLoading = false)\n          })\n          .catch(err => console.log(err))\n      }\n      return () => {\n        \n      }\n    }, [tree])\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        const fd = new FormData();\n        for (let key in tree) {\n            fd.append(key, tree[key])\n        }\n        if (props.action === \"create\"){\n          apihandler\n            .createTree(fd)\n            .then((data) => {\n                console.log(data)\n                props.history.push('/')\n            })\n            .catch(err => console.log(err))\n        }\n        else if (props.action === \"edit\") {\n          apihandler\n            .editTree(props.id, fd)\n            .then((data) => {\n                console.log(data)\n                props.history.push('/')\n            })\n        }\n    }\n    // console.log(tree)\n    return ( \n          <> <Form onSubmit={handleSubmit} action={props.action}>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Tree Name{<span style={{color: 'red'}}>*</span>}</Form.Label>\n              <Form.Control type=\"text\" value={tree.name ? tree.name : ''} placeholder=\"Jean-Pascal\" name=\"name\" required onChange={handleChange} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Tree Height{<span style={{color: 'red'}}>*</span>}</Form.Label>\n            </Form.Group>\n     \n          <Form.Row>\n              <Form.Group>\n                <Form.Control type=\"range\" value={tree.height ? tree.height : ''} name=\"height\" required step={1} min={30} max={350} onChange={handleChange} />\n              </Form.Group>\n              <Form.Group>\n                <Form.Control type=\"number\" value={tree.height ? tree.height : ''} name=\"height\" required onChange={handleChange} />\n              </Form.Group>\n          </Form.Row>\n      \n          <Form.Group>\n                <Form.Label>Tree Price{<span style={{color: 'red'}}>*</span>}</Form.Label>\n          </Form.Group>\n  \n          <Form.Row>\n              <Form.Group>\n                <Form.Control type=\"range\" value={tree.price ? tree.price : \"\"} name=\"price\" required step={1} min={30} max={350} onChange={handleChange} />\n              </Form.Group>\n              <Form.Group>\n                <Form.Control type=\"number\" value={tree.price ? tree.price : \"\"} name=\"price\" required onChange={handleChange} />\n              </Form.Group>\n          </Form.Row>\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n    <Form.Label>Select pine type{<span style={{color: 'red'}}>*</span>}</Form.Label>\n    <Form.Control as=\"select\" value={tree.type ? tree.type : '-1'} name=\"type\" required onChange={handleChange}>\n      <option disabled value='-1'>--Please Choose an Option--</option>\n      {treeArr.map((elem, i) => {\n          return <option value={elem} key={i}>{elem}</option>\n      })}\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect2\">\n    <Form.Label>Age</Form.Label>\n    <Form.Control as=\"select\" name=\"age\" value={tree.age ? tree.age : '-1'} onChange={handleChange}>\n      <option disabled value='-1'>--Please Choose an Option--</option>\n      <option value={10}>10</option>\n      <option value={11}>11</option>\n      <option value={12}>12</option>\n      <option value={13}>13</option>\n      <option value={14}>14</option>\n      <option value={15}>15</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Description</Form.Label>\n    <Form.Control as=\"textarea\" placeholder=\"Describe Jean Pascal\" value={tree.description ? tree.description : ''} rows={3} name=\"description\" onChange={handleChange} />\n  </Form.Group>\n  <Form.Group>\n      {props.action === \"edit\" && tree.picture ? <img src={tree.picture} alt={tree.name} /> : '' }\n    <Form.File id=\"exampleFormControlFile1\" label=\"Tree Picture\" name=\"picture\" onChange={handleChange} />\n  </Form.Group>\n  <button>Submit</button>\n</Form></>\n    \n    )\n\n}\n\nexport default withRouter(FormTree)","/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/ProductFilter.jsx",[],"/Users/maxgruber/Documents/CODING/Projects/treender_app/client-treender/src/components/RangeSlider.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":18},{"ruleId":"99","severity":1,"message":"103","line":25,"column":9,"nodeType":"101","messageId":"102","endLine":25,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":42,"column":8,"nodeType":"107","endLine":42,"endColumn":14,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'StyledBadge' is assigned a value but never used.","'propTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLoading', 'props.action', and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [isLoading, props.action, props.id, tree]",{"range":"114","text":"115"},[1183,1189],"[isLoading, props.action, props.id, tree]"]